apply plugin: 'com.android.library'

android {
    compileSdkVersion project.ext.compileSDKVersion
    buildToolsVersion project.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion project.ext.minSDKVersion
        targetSdkVersion project.ext.targetSDKVersion
        versionCode project.ext.versionSDKCode
        versionName project.ext.versionSDKName

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    if (project.ext.dependType == DEPEND_TYPE_LOCAL_NONE){
        api project(path: ':xabstractionlibrary-network')
        api project(path: ':xabstractionlibrary-parse')
    }else if(project.ext.dependType == DEPEND_TYPE_LOCAL_REPO){
        print(DEPEND_TYPE_LOCAL_REPO)
        def parseUrl = 'com.xframework:xabstractionlibrary-parse:' + project.ext.versionSDKName + "-" + project.ext.deployDepend
        api parseUrl
        def networkUrl = 'com.xframework:xabstractionlibrary-network:' + project.ext.versionSDKName + "-" + project.ext.deployDepend
        api networkUrl
    }else if(project.ext.dependType == DEPEND_TYPE_LOCAL_ROUTE){
        print(DEPEND_TYPE_LOCAL_ROUTE)
        def parseUrl = 'com.xframework:xabstractionlibrary-parse:' + project.ext.versionSDKName + "-" + project.ext.deployDepend
        api parseUrl
        def networkUrl = 'com.xframework:xabstractionlibrary-network:' + project.ext.versionSDKName + "-" + project.ext.deployDepend
        api networkUrl
    }
}

apply from: 'xabstractionlibrary-uicommon-release.gradle'